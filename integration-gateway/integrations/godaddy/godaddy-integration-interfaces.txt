export interface GoDaddyConfig {
    apiKey: string;
    apiSecret: string;
    baseUrl: string;
    defaultTTL?: number;
}

export enum DNSRecordType {
    A = 'A',
    AAAA = 'AAAA',
    CNAME = 'CNAME',
    MX = 'MX',
    NS = 'NS',
    SOA = 'SOA',
    SRV = 'SRV',
    TXT = 'TXT',
    CAA = 'CAA'
}

export interface DNSRecord {
    type: DNSRecordType;
    name: string;
    data: string;
    ttl: number;
    priority?: number;
    service?: string;
    protocol?: string;
    port?: number;
    weight?: number;
}

export interface DomainInfo {
    domainId: string;
    domain: string;
    status: DomainStatus;
    expirationDate: string;
    createdAt: string;
    nameServers: string[];
    locked: boolean;
    privacy: boolean;
    transferProtected: boolean;
}

export enum DomainStatus {
    ACTIVE = 'ACTIVE',
    PENDING = 'PENDING',
    EXPIRED = 'EXPIRED',
    CANCELLED = 'CANCELLED'
}

export interface DNSUpdateRequest {
    records: DNSRecord[];
    domain: string;
}

export interface DNSUpdateResponse {
    success: boolean;
    message?: string;
    updatedRecords: DNSRecord[];
}

export interface DomainSearchParams {
    query?: string;
    status?: DomainStatus;
    includes?: string[];
    limit?: number;
    offset?: number;
}

export interface DomainListResponse {
    domains: DomainInfo[];
    totalCount: number;
    nextPageToken?: string;
}

export interface GoDaddyError {
    code: string;
    message: string;
    fields?: Array<{
        code: string;
        message: string;
        path: string;
        value?: any;
    }>;
}

export interface BatchDNSOperation {
    operations: Array<{
        type: 'ADD' | 'DELETE' | 'UPDATE';
        records: DNSRecord[];
    }>;
    domain: string;
}

export interface BatchOperationResult {
    success: boolean;
    results: Array<{
        operation: string;
        records: DNSRecord[];
        success: boolean;
        error?: GoDaddyError;
    }>;
}

